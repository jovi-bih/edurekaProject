pipeline {
    agent none  
    stages {
        stage('compile') {
            agent { label 'master' }
	         steps {
                // step1 
                echo 'compiling..'
		            sh script: '/opt/maven/bin/mvn compile'
           }
        }
        stage('unit-test') {
            agent { label 'slave1' }
	          steps {
                // step2
                echo 'unittest..'
	               sh script: '/opt/maven/bin/mvn test'
            }
	          post {
               success {
                   junit 'target/surefire-reports/*.xml'
               }
            }			
        }
        
        stage('package/build-war') {
            agent { label 'slave2' }
	         steps {
                // step3
                echo 'package......'
		            sh script: '/opt/maven/bin/mvn package'	
           }		
        }
        stage('build & push docker image') {
	         steps {
              withDockerRegistry(credentialsId: 'DOCKER_HUB_LOGIN', url: 'https://index.docker.io/v1/') {
                    sh script: 'cd  $WORKSPACE'
                    sh script: 'docker build --file Dockerfile --tag docker.io/jovibih/edurekaProject:$BUILD_NUMBER .'
                    sh script: 'docker push docker.io/jovibih/edurekaProject:$BUILD_NUMBER'
              }	
           }  		
        }
    pipeline {
    agent any

    environment {
        TOMCAT_HOST = 'localhost'
        DOCKER_REGISTRY = 'https://hub.docker.com/repositories/jovibih'
        DOCKER_IMAGE = 'edurekaproject'
    }

    stage('stage('Deploy to Tomcat') {
            steps {
                script {
                    // Define Tomcat variables
                    def TOMCAT_HOME = '/opt/tomcat'
                    def TOMCAT_WEBAPPS = "${TOMCAT_HOME}/webapps"

                    // Copy the WAR file to the Tomcat webapps directory
                    sh " sudo cp /var/lib/jenkins/workspace/pipeline1/target/ABCtechnologies-1.0.war ${TOMCAT_WEBAPPS}/"

                    // Restart Tomcat
                    sh "sudo ${TOMCAT_HOME}/bin/shutdown.sh"
                    sleep(5) // Wait for Tomcat to shutdown
                    sh "sudo ${TOMCAT_HOME}/bin/startup.sh"
                }
            }
        }
    }
}


